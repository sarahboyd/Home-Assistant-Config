---

- alias: Set 3D printer to printing when power detected
  trigger:
    - platform: numeric_state
      entity_id: sensor.plug_1_power
      above: 15
  condition:
    - condition: template
      value_template: "{{ states.sensor.printer_state.state != 'Printing' }}"
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/printer
        payload: 'Printing'
        retain: 'true'
- alias: Set 3D printer to finished when power drops
  trigger:
    - platform: numeric_state
      entity_id: sensor.plug_1_power
      below: 10
  condition:
    - condition: template
      value_template: "{{ states.sensor.printer_state.state == 'Printing' }}"
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/printer
        payload: 'Finished'
        retain: 'true'
- alias: Set 3D printer to off when power changes
  trigger:
    - platform: state
      entity_id: sensor.plug_1_power_state
      to: 'OFF'
  condition: []
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/printer
        payload: 'Off'
        retain: 'true'
- alias: Set 3D printer to idle when power changes to ON
  trigger:
    - platform: state
      entity_id: sensor.plug_1_power_state
      to: 'ON'
      from: 'OFF'
  condition:
    - condition: template
      value_template: "{{ states.sensor.printer_state.state != 'Printing' }}"
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/printer
        payload: 'Idle'
        retain: 'true'
