- platform: template
  sensors:
    sarah_status:
      value_template: '{{ states.input_select.sarah_status_dropdown.state }}'
      friendly_name: 'Sarah'
- platform: template
  sensors:
    scott_status:
      value_template: '{{ states.input_select.scott_status_dropdown.state }}'
      friendly_name: 'Scott'
- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'date_time_iso'
    - 'time_date'
    - 'time_utc'
    - 'beat'
- platform: template
  sensors:
    wakeup_alarm_time:
      friendly_name: 'Alarm time'
      value_template: '{% if states.input_number.wakeup_hour.state|length == 3 %}0{% endif %}{{ states.input_number.wakeup_hour.state | int }}:{% if states.input_number.wakeup_minutes.state|length == 3 %}0{% endif %}{{ states.input_number.wakeup_minutes.state | int }}'
- platform: template
  sensors:
    wakeup_start_time_lights:
      friendly_name: 'Fade-in start time'
      value_template: >
        {% if states.sensor.wakeup_alarm_time is defined %}
        {% if states.sensor.wakeup_alarm_time and states.input_number.wakeup_duration %}
        {% set alarmtime = states.sensor.wakeup_alarm_time.state %}
        {% set alarm_hour = alarmtime.split(":")[0] | int %}
        {% set alarm_min = alarmtime.split(":")[1] | int %}
        {% set light_dur = states.input_number.wakeup_duration.state | int %}
        {% set alarm_min_light = alarm_min - light_dur %}
        {% if alarm_min_light  < 0 %}
        {% set alarm_min_light = alarm_min_light + 60 %}
        {% set alarm_hour_light = alarm_hour - 1 %}
        {% if alarm_hour_light < 0 %}{% set alarm_hour_light = 23 %}{% endif %}
        {% if alarm_hour_light < 10 %}0{% endif %}{{ alarm_hour_light}}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
        {% else %}
        {% if alarm_hour < 10 %}0{% endif %}{{ alarm_hour }}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
        {% endif %}
        {% endif %}
        {% endif %}
- platform: template
  sensors:
    wakeup_fadein_duration:
      friendly_name: 'Fade-in duration'
      value_template: '{{ states.input_number.wakeup_duration.state | int }}'
      unit_of_measurement: 'min'
- platform: template
  sensors:
    wakeup_lights_off_time:
      friendly_name: 'Morning lights off time'
      value_template: >
        {% if states.sensor.wakeup_alarm_time is defined and states.input_number.wakeup_duration is defined %}
        {% if states.sensor.wakeup_alarm_time and states.input_number.wakeup_duration %}
        {% set alarmtime = states.sensor.wakeup_alarm_time.state %}
        {% set alarm_hour = alarmtime.split(":")[0] | int %}
        {% set alarm_min = alarmtime.split(":")[1] | int %}
        {% set light_dur = 60 | int %}
        {% set alarm_min_light = alarm_min + light_dur %}
        {% if alarm_min_light  > 60 %}
        {% set alarm_min_light = alarm_min_light - 60 %}
        {% set alarm_hour_light = alarm_hour + 1 %}
        {% if alarm_hour_light < 0 %}{% set alarm_hour_light = 23 %}{% endif %}
        {% if alarm_hour_light < 10 %}0{% endif %}{{ alarm_hour_light}}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
        {% else %}
        {% if alarm_hour < 10 %}0{% endif %}{{ alarm_hour }}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
        {% endif %}
        {% endif %}
        {% endif %}
- platform: template
  sensors:
    sarah_phone:
      friendly_name: Sarah's phone
      unit_of_measurement: '%'
      value_template: >-
        {%- if states.device_tracker.life360_sarah_boyd.attributes.battery %}
          {{ states.device_tracker.life360_sarah_boyd.attributes.battery|round }}
        {% else %}
          {{ states.sensor.sarah_phone.state }}
        {%- endif %}
      device_class: battery
- platform: template
  sensors:
    scott_phone:
      friendly_name: Scott's phone
      unit_of_measurement: '%'
      value_template: >-
          {%- if states.device_tracker.life360_scott_young.attributes.battery %}
              {{ states.device_tracker.life360_scott_young.attributes.battery|round }}
          {% else %}
              {{ states.sensor.scott_phone.state }}
          {%- endif %}
      device_class: battery
- platform: template
  sensors:
    sun_elevation:
      friendly_name: Sun Elevation
      value_template: '{{states.sun.sun.attributes.elevation}}'
      unit_of_measurement: 'Â°'
- platform: darksky
  api_key: !secret darksky_api
  forecast:
    - 0
  hourly_forecast:
    - 0
    - 1
  monitored_conditions:
    - summary
    - icon
    - temperature
    - apparent_temperature
    - precip_probability
    - precip_type
    - humidity
    - cloud_cover
    - nearest_storm_distance
    - precip_intensity
    - wind_speed
- platform: systemmonitor
  resources:
  - type: processor_use
  - type: disk_use_percent
    arg: /
  - type: memory_use_percent
  - type: ipv4_address
    arg: eth0
  - type: network_in
    arg: eth0
  - type: network_out
    arg: eth0
  - type: last_boot
- platform: template
  sensors:
    living_room_main_light_brightness:
      friendly_name: "Living Room Brightness"
      value_template: "{{ state_attr('light.living_room_main_lights', 'brightness') }}"
    dining_room_light_brightness:
      friendly_name: "Dining Room Brightness"
      value_template: "{{ state_attr('light.dining_room_chandelier', 'brightness') }}"
    front_hall_light_brightness:
      friendly_name: "Front Hall Brightness"
      value_template: "{{ state_attr('light.front_foyer_main_lights',	'brightness') }}"
- platform: mqtt
  name: "Washer State"
  state_topic: "hass/state/washer"
  icon: mdi:washing-machine
- platform: mqtt
  name: "Dryer State"
  state_topic: "hass/state/dryer"
  icon: mdi:tumble-dryer
- platform: mqtt
  name: "Printer State"
  state_topic: "hass/state/printer"
- platform: mqtt
  name: Dryer Start Stop
  state_topic: "gBridge/u4099/dryer/startstop"
- platform: mqtt
  name: "Washer Power"
  state_topic: "tele/Washer/SENSOR"
  value_template: "{{value_json['ENERGY']['Power'] }}"
  qos: 2
  unit_of_measurement: "W"
  icon: mdi:flash-circle
  availability_topic: "tele/Washer/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
- platform: mqtt
  name: "Washer Voltage"
  state_topic: "tele/Washer/SENSOR"
  value_template: "{{value_json['ENERGY']['Voltage'] }}"
  qos: 2
  unit_of_measurement: "V"
  icon: mdi:flash-circle
  availability_topic: "tele/Washer/LWT"
  payload_available: "Online"
  payload_not_available: "Offline" 
- platform: mqtt
  name: "Washer Current"
  state_topic: "tele/Washer/SENSOR"
  value_template: "{{value_json['ENERGY']['Current'] }}"
  qos: 2
  unit_of_measurement: "A"
  icon: mdi:flash-circle
  availability_topic: "tele/Washer/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"   
- platform: mqtt
  name: "Washer Signal"
  state_topic: "tele/Washer/STATE"
  value_template: "{{value_json['Wifi']['RSSI'] }}"
  qos: 2
  unit_of_measurement: "%"
  availability_topic: "tele/Washer/LWT"
  payload_available: "Online"
  payload_not_available: "Offline" 
- platform: mqtt
  name: "Washer Energy Today"
  state_topic: "tele/Washer/SENSOR"
  value_template: "{{value_json['ENERGY']['Today'] }}"
  qos: 2
  unit_of_measurement : "kWh"
  availability_topic: "tele/Washer/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
- platform: mqtt
  name: "Washer Energy Yesterday"
  state_topic: "tele/Washer/SENSOR"
  value_template: "{{value_json['ENERGY']['Yesterday'] }}"
  qos: 2
  unit_of_measurement : "kWh"
  availability_topic: "tele/Washer/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
- platform: mqtt
  name: "Washer Energy Total"
  state_topic: "tele/Washer/SENSOR"
  value_template: "{{value_json['ENERGY']['Total'] }}"
  qos: 2
  unit_of_measurement : "kWh"
  availability_topic: "tele/Washer/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
- platform: mqtt
  name: "Plug 1 Energy Today"
  state_topic: "tele/sonoff-plug-1/SENSOR"
  value_template: "{{value_json['ENERGY']['Today'] }}"
  qos: 2
  unit_of_measurement : "kWh"
  availability_topic: "tele/sonoff-plug-1/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
- platform: mqtt
  name: "Plug 2 Energy Today"
  state_topic: "tele/sonoff-plug-2/SENSOR"
  value_template: "{{value_json['ENERGY']['Today'] }}"
  qos: 2
  unit_of_measurement : "kWh"
  availability_topic: "tele/sonoff-plug-2/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
- platform: mqtt
  name: "Plug 1 Energy Yesterday"
  state_topic: "tele/sonoff-plug-1/SENSOR"
  value_template: "{{value_json['ENERGY']['Yesterday'] }}"
  qos: 2
  unit_of_measurement : "kWh"
  availability_topic: "tele/sonoff-plug-1/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
- platform: mqtt
  name: "Plug 2 Energy Yesterday"
  state_topic: "tele/sonoff-plug-2/SENSOR"
  value_template: "{{value_json['ENERGY']['Yesterday'] }}"
  qos: 2
  unit_of_measurement : "kWh"
  availability_topic: "tele/sonoff-plug-2/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
- platform: mqtt
  name: "Plug 1 Energy Total"
  state_topic: "tele/sonoff-plug-1/SENSOR"
  value_template: "{{value_json['ENERGY']['Total'] }}"
  qos: 2
  unit_of_measurement : "kWh"
  availability_topic: "tele/sonoff-plug-1/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
- platform: mqtt
  name: "Plug 2 Energy Total"
  state_topic: "tele/sonoff-plug-2/SENSOR"
  value_template: "{{value_json['ENERGY']['Total'] }}"
  qos: 2
  unit_of_measurement : "kWh"
  availability_topic: "tele/sonoff-plug-2/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
- platform: mqtt
  name: "Plug 1 Power State"
  state_topic: "stat/sonoff-plug-1/POWER"
  #value_template: "{{value_json['POWER']}}"
  icon: mdi:printer-3d
- platform: mqtt
  name: "Plug 2 Power State"
  state_topic: "stat/sonoff-plug-2/POWER"
  #value_template: "{{value_json['POWER']}}"
- platform: command_line
  name: CPU Temperature
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  # If errors occur, make sure configuration file is encoded as UTF-8
  unit_of_measurement: "Â°C"
  value_template: '{{ value | multiply(0.001) | round(1) }}'
- platform: mqtt
  name: "Plug 1 Power"
  state_topic: "tele/sonoff-plug-1/SENSOR"
  value_template: "{{value_json['ENERGY']['Power'] }}"
  qos: 2
  unit_of_measurement: "W"
  icon: mdi:flash-circle
  availability_topic: "tele/sonoff-plug-1/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
- platform: mqtt
  name: "Plug 2 Power"
  state_topic: "tele/sonoff-plug-2/SENSOR"
  value_template: "{{value_json['ENERGY']['Power'] }}"
  qos: 2
  unit_of_measurement: "W"
  icon: mdi:flash-circle
  availability_topic: "tele/sonoff-plug-2/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
- platform: mqtt
  name: "Plug 1 Voltage"
  state_topic: "tele/sonoff-plug-1/SENSOR"
  value_template: "{{value_json['ENERGY']['Voltage'] }}"
  qos: 2
  unit_of_measurement: "V"
  icon: mdi:flash-circle
  availability_topic: "tele/sonoff-plug-1/LWT"
  payload_available: "Online"
  payload_not_available: "Offline" 
- platform: mqtt
  name: "Plug 2 Voltage"
  state_topic: "tele/sonoff-plug-2/SENSOR"
  value_template: "{{value_json['ENERGY']['Voltage'] }}"
  qos: 2
  unit_of_measurement: "V"
  icon: mdi:flash-circle
  availability_topic: "tele/sonoff-plug-2/LWT"
  payload_available: "Online"
  payload_not_available: "Offline" 
- platform: mqtt
  name: "Plug 1 Current"
  state_topic: "tele/sonoff-plug-1/SENSOR"
  value_template: "{{value_json['ENERGY']['Current'] }}"
  qos: 2
  unit_of_measurement: "A"
  icon: mdi:flash-circle
  availability_topic: "tele/sonoff-plug-1/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"   
- platform: mqtt
  name: "Plug 2 Current"
  state_topic: "tele/sonoff-plug-2/SENSOR"
  value_template: "{{value_json['ENERGY']['Current'] }}"
  qos: 2
  unit_of_measurement: "A"
  icon: mdi:flash-circle
  availability_topic: "tele/sonoff-plug-2/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"   
- platform: season
  type: astronomical
- platform: badnest
- platform: command_line
  name: OffPeak Hydro Rate
  command: "cat /home/homeassistant/.homeassistant/hydro_rates/offpeak"
- platform: command_line
  name: MidPeak Hydro Rate
  command: "cat /home/homeassistant/.homeassistant/hydro_rates/midpeak"
- platform: command_line
  name: OnPeak Hydro Rate
  command: "cat /home/homeassistant/.homeassistant/hydro_rates/onpeak"
- platform: template
  sensors:
    printer_cost_daily:
      friendly_name: Printer Cost Daily
      unit_of_measurement: '$'
      value_template: > 
        {% set onpeak = ((states.sensor.printer_daily_onpeak.state | float ) * 0.208) %}
        {% set midpeak = (( states.sensor.printer_daily_midpeak.state | float ) * 0.144 ) %}
        {% set offpeak = (( states.sensor.printer_daily_offpeak.state | float ) * 0.101) %}
        {% set total = onpeak + midpeak + offpeak %}
        {{ total | round(4) }}
    printer_cost_weekly:
      friendly_name: Printer Cost Weekly
      unit_of_measurement: '$'
      value_template: > 
        {% set onpeak = ((states.sensor.printer_weekly_onpeak.state | float ) * 0.208) %}
        {% set midpeak = (( states.sensor.printer_weekly_midpeak.state | float ) * 0.144 ) %}
        {% set offpeak = (( states.sensor.printer_weekly_offpeak.state | float ) * 0.101) %}
        {% set total = onpeak + midpeak + offpeak %}
        {{ total | round(4) }}
    printer_cost_monthly:
      friendly_name: Printer Cost Monthly
      unit_of_measurement: '$'
      value_template: > 
        {% set onpeak = ((states.sensor.printer_monthly_onpeak.state | float ) * 0.208) %}
        {% set midpeak = (( states.sensor.printer_monthly_midpeak.state | float ) * 0.144 ) %}
        {% set offpeak = (( states.sensor.printer_monthly_offpeak.state | float ) * 0.101) %}
        {% set total = onpeak + midpeak + offpeak %}
        {{ total | round(4) }}
    washer_cost_daily:
      friendly_name: Washer Cost Daily
      unit_of_measurement: '$'
      value_template: > 
        {% set onpeak = ((states.sensor.washer_daily_onpeak.state | float ) * 0.208) %}
        {% set midpeak = (( states.sensor.washer_daily_midpeak.state | float ) * 0.144 ) %}
        {% set offpeak = (( states.sensor.washer_daily_offpeak.state | float ) * 0.101) %}
        {% set total = onpeak + midpeak + offpeak %}
        {{ total | round(4) }}
    washer_cost_weekly:
      friendly_name: Washer Cost Weekly
      unit_of_measurement: '$'
      value_template: > 
        {% set onpeak = ((states.sensor.washer_weekly_onpeak.state | float ) * 0.208) %}
        {% set midpeak = (( states.sensor.washer_weekly_midpeak.state | float ) * 0.144 ) %}
        {% set offpeak = (( states.sensor.washer_weekly_offpeak.state | float ) * 0.101) %}
        {% set total = onpeak + midpeak + offpeak %}
        {{ total | round(4) }}
    washer_cost_monthly:
      friendly_name: Washer Cost Monthly
      unit_of_measurement: '$'
      value_template: > 
        {% set onpeak = ((states.sensor.washer_monthly_onpeak.state | float ) * 0.208) %}
        {% set midpeak = (( states.sensor.washer_monthly_midpeak.state | float ) * 0.144 ) %}
        {% set offpeak = (( states.sensor.washer_monthly_offpeak.state | float ) * 0.101) %}
        {% set total = onpeak + midpeak + offpeak %}
        {{ total | round(4) }}
- platform: mqtt
  name: "OctoPi Temperature"
  state_topic: "octopi/temp"
  unit_of_measurement: "Â°C"
- platform: mqtt
  name: "OctoPi Voltage Level"
  state_topic: "octopi/voltage"
  unit_of_measurement: "V"
- platform: mqtt
  name: "OctoPi Throttling Stats"
  state_topic: "octopi/throttling"
- platform: mqtt
  name: "OctoPi Under Voltage"
  state_topic: "octopi/throttling"
  value_template: "{{value_json['UnderVoltage']}}"
- platform: mqtt
  name: "OctoPi Throttled"
  state_topic: "octopi/throttling"
  value_template: "{{value_json['throttled']}}"
- platform: mqtt
  name: "OctoPi Software Temp Limit"
  state_topic: "octopi/throttling"
  value_template: "{{value_json['softTempLimit']}}"
- platform: template
  sensors:
    - octoprint_time_elapsed_friendly:
       friendly_name: "Octoprint time elapsed"
       value_template: "{{ states('sensor.sensor.octoprint_time_elapsed') | int | timestamp_custom('%H:%M:%S', 0) }}"
     - octoprint_time_remaining_friendly:
       friendly_name: "Octoprint time remaining"    
       value_template: >-
         {% set etime = states.sensor.octoprint_time_remaining.state | int %}
         {% set seconds = etime % 60 %}
         {% set minutes = ((etime % 3600) / 60) | int %}
         {% set hours = ((etime % 86400) / 3600) | int %}
         {% set days = (etime / 86400) | int %}
         {%- if days > 0 -%}
           {%- if days == 1 -%}
             1 day
           {%- else -%}
             {{ days }} days
           {%- endif -%}
           {{ ', ' }}
         {%- endif -%}


